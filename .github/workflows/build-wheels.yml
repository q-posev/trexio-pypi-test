
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
# Workflow to build and test wheels.
#
# in the get_commit_message job. Be sure to include [wheel build] in your commit
# message to trigger the build. All files related to wheel building are located
# at tools/wheels/
name: Wheel builder

jobs:
  get_commit_message:
    name: Get commit message
    runs-on: ubuntu-latest
    if: github.repository == 'q-posev/trexio-pypi-test'
    outputs:
      message: ${{ steps.commit_message.outputs.message }}
    steps:
      - name: Checkout numpy
        uses: actions/checkout@v2
        # Gets the correct commit message for pull request
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get commit message
        id: commit_message
        run: |
          set -xe
          COMMIT_MSG=$(git log --no-merges -1 --oneline)
          echo "::set-output name=message::$COMMIT_MSG"
  build_wheels:
    name: Build wheel for Python 3.8 on manylinux_x86_64
    needs: get_commit_message
    if: >-
      contains(needs.get_commit_message.outputs.message, '[wheel build]') ||
      github.event_name == 'push' 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the branch
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install build dependencies
        run: python -m pip install -U setuptools 
      - name: Build distribution tarball
        run: |
          python setup.py sdist
          mv ./dist/trexio-*.tar.gz .
      #- name: Login to GitHub Container Registry
      #  uses: docker/login-action@v1 
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.repository_owner }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build wheels
        run: |
          docker pull ghcr.io/q-posev/hdf5_1_12_on_2010_x86_64:latest
          docker run --rm --env PLAT=manylinux2010_x86_64 --volume `pwd`:/tmp --workdir /tmp ghcr.io/q-posev/hdf5_1_12_on_2010_x86_64 /bin/bash build_manylinux_wheels.sh trexio-*.tar.gz

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
