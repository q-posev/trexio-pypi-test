
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]
  release:
    types:
      - created
# Workflow to build and publish wheels.
#
# in the get_commit_message job: Include [wheel build] in your commit message to trigger the build. 
name: Wheel builder

jobs:

  get_commit_message:
    name: Get commit message
    runs-on: ubuntu-latest
    if: github.repository == 'q-posev/trexio-pypi-test'
    outputs:
      message: ${{ steps.commit_message.outputs.message }}
    steps:
      - name: Checkout numpy
        uses: actions/checkout@v2
        # Gets the correct commit message for pull request
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get commit message
        id: commit_message
        run: |
          set -xe
          COMMIT_MSG=$(git log --no-merges -1 --oneline)
          echo "::set-output name=message::$COMMIT_MSG"
          
  build_wheels:
    name: Build manylinux_x86_64 wheels for different versions of CPython 
    needs: get_commit_message
    if: >-
      contains(needs.get_commit_message.outputs.message, '[wheel build]') ||
      github.event_name == 'workflow-dispatch' 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the branch
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
      - name: Install build dependencies
        run: python -m pip install -U setuptools 
      - name: Build distribution tarball
        run: |
          python setup.py sdist
          mv ./dist/trexio-*.tar.gz .
      - name: Build wheels
        run: |
          docker pull ghcr.io/q-posev/hdf5_1_12_on_2010_x86_64:latest
          docker run --rm --env PLAT=manylinux2010_x86_64 --volume `pwd`:/tmp --workdir /tmp ghcr.io/q-posev/hdf5_1_12_on_2010_x86_64 /bin/bash build_manylinux_wheels.sh trexio-*.tar.gz

      - uses: actions/upload-artifact@v2
        with:
          name: pytrexio
          path: |
            ./trexio-*.tar.gz
            ./wheelhouse/*.whl
            
  publish_wheels:
    name: Publish manylinux_x86_64 wheels on PyPI
    needs: build_wheels
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the branch
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
      - name: Install build dependencies
        run: python -m pip install -U setuptools twine
      - name: Download the build artifacts
        uses: actions/download-artifact@v2
        with:
          name: pytrexio
          path: pytrexio-dist
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/project/trexio/
      #- name: Publish distribution ðŸ“¦ to PyPI
      #  if: startsWith(github.ref, 'refs/tags')
      #  uses: pypa/gh-action-pypi-publish@master
      #  with:
      #    password: ${{ secrets.PYPI_API_TOKEN }}

